buildscript {
    ext {
        springBootVersion = '2.2.2.RELEASE'
    }
    repositories {
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://repo.spring.io/milestone'}
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath gradleApi()
    }
}

allprojects {
    group 'com.zzu'
    version '1.0-SNAPSHOT'

    //配置编码格式
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://repo.spring.io/milestone'}
        mavenLocal()
        mavenCentral()
    }

}

subprojects {
    System.out.println(it.name + ".............")
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    //[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    task allDeps(type: DependencyReportTask) {}
}

configure(subprojects.findAll()) {

    //[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    dependencies {
        compile ("org.springframework.boot:spring-boot-starter")
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'com.baomidou:mybatis-plus-boot-starter:3.4.2'
        implementation ('com.alibaba:easyexcel:2.2.6')
        compile ('com.github.pagehelper:pagehelper-spring-boot-starter:1.4.0')
        compile ('com.alibaba:fastjson:1.2.83')
        compile ('ch.qos.logback:logback-core:1.2.10')
        compile ("ch.qos.logback:logback-classic:1.2.10")
        compile ("ch.qos.logback:logback-access:1.2.10")
        compile ('commons-io:commons-io:2.10.0')
        compile ('mysql:mysql-connector-java:8.0.28')
        compile ('org.projectlombok:lombok:1.18.2')
        annotationProcessor ('org.projectlombok:lombok:1.18.2')
    }

    jar {
        enabled = true
    }
}

project(':obrain-book'){
    description("图书微服务")
}

project(':obrain-bookCase'){
    description("书柜微服务")
}

def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08:00"))
}